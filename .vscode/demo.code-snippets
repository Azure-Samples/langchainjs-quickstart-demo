{
	// Place your openscad workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"import azure": {
		"prefix": "imp",
    "scope": "javascript",
		"body": [
			"import { AzureChatOpenAI } from \"@langchain/azure-openai\";",
			"import { AzureOpenAIEmbeddings } from \"@langchain/azure-openai\";",
			"import {",
			"  AzureAISearchVectorStore,",
			"  AzureAISearchQueryType,",
			"} from \"@langchain/community/vectorstores/azure_aisearch\";"
		],
		"description": ""
	},
  "new ai search": {
		"prefix": "newai",
    "scope": "javascript",
		"body": [
			"new AzureAISearchVectorStore(embeddings, {",
			"  search: { type: AzureAISearchQueryType.SimilarityHybrid },",
			"});"
		],
		"description": ""
	},
  "search video id": {
		"prefix": "sea",
    "scope": "javascript",
		"body": [
			"// Search if documents already exist for the source video",
			"const videoId = YOUTUBE_VIDEO_URL.split(\"v=\")[1];",
			"const indexedDocuments = await vectorStore.similaritySearch(\"*\", 1, {",
			"  filterExpression: `metadata/source eq '\\${videoId}'`,",
			"});"
		],
		"description": ""
	},
  "add docs": {
		"prefix": "add",
    "scope": "javascript",
		"body": [
			"if (indexedDocuments.length === 0) {",
			"  console.log(\"Embedding documents...\");",
			"  await vectorStore.addDocuments(documents);",
			"}"
		],
		"description": ""
	}
}
